#!/usr/bin/env bash

set -e

source $SNAP/actions/common/utils.sh

SHIM_BINARY="containerd-shim-spin-v1"
SHIM_PATH="${SNAP_DATA}/plugin/${SHIM_BINARY}"
SHIM_VERSION="v0.3.3"
WASM_TO_OCI_VERSION="v0.1.2"

KUBECTL="$SNAP/microk8s-kubectl.wrapper"
CURRENT_DIR=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)

echo "Enabling fermyon spin"

# Install shim binary 

if [ ! -f "${SNAP_DATA}/bin/${SHIM_BINARY}" ]
then
  if [ $SNAP_ARCH == "arm64" ]; then
    SHIM_ARCH="aarch64"
  elif [ $SNAP_ARCH == "amd64" ]; then
    SHIM_ARCH="X64_64"
  else 
    echo "Architecture $SNAP_ARCH not supported"
    exit 1
  fi

  echo "Fetching shim version $SHIM_VERSION for $SHIM_ARCH."
  run_with_sudo mkdir -p "${SNAP_DATA}/tmp/spin"
  cd "${SNAP_DATA}/tmp/spin"
  echo "Fetching https://github.com/deislabs/containerd-wasm-shims/releases/download/${SHIM_VERSION}/containerd-wasm-shims-v1-linux-${SHIM_ARCH}.tar.gz"
  fetch_as "https://github.com/deislabs/containerd-wasm-shims/releases/download/${SHIM_VERSION}/containerd-wasm-shims-v1-linux-${SHIM_ARCH}.tar.gz" "$SNAP_DATA/tmp/spin/spin.tar.gz"
  run_with_sudo gzip -q -d "$SNAP_DATA/tmp/spin/spin.tar.gz"
  run_with_sudo tar -xvf "$SNAP_DATA/tmp/spin/spin.tar"
  run_with_sudo mkdir -p "$SNAP_DATA/bin/"
  run_with_sudo mv "$SNAP_DATA/tmp/spin/${SHIM_BINARY}"  "$SNAP_DATA/bin/"
  run_with_sudo rm -rf "$SNAP_DATA/tmp/spin"
fi

# Install wasm-to-oci to support wasm upload to the local registry 
if [ ! -f "{SNAP_DATA}/bin/wasm-to-oci" ]
then
  if ! [ $SNAP_ARCH == "arm64" ] && ! [ $SNAP_ARCH == "amd64" ]; then
    echo "Architecture $ARCH not supported"
    exit 1
  fi
  echo "Fetching wasm-to-oci version $WASM_TO_OCI_VERSION for $SNAP_ARCH."
  run_with_sudo mkdir -p "${SNAP_DATA}/tmp/wasm_to_oci"
  (cd "${SNAP_DATA}/tmp/wasm_to_oci"
  echo "Fetching https://github.com/mayflower/wasm-to-oci/releases/download/${WASM_TO_OCI_VERSION}/linux-${SNAP_ARCH}-wasm-to-oci"
  fetch_as "https://github.com/mayflower/wasm-to-oci/releases/download/${WASM_TO_OCI_VERSION}/linux-${SNAP_ARCH}-wasm-to-oci" "$SNAP_DATA/tmp/wasm_to_oci/wasm-to-oci"
  run_with_sudo mv "$SNAP_DATA/tmp/wasm_to_oci/wasm-to-oci" "$SNAP_DATA/bin/"
  run_with_sudo chmod +x "$SNAP_DATA/bin/wasm-to-oci"
  run_with_sudo cp $(dirname "$0")/microk8s-wasm-to-oci.wrapper $SNAP_COMMON/plugins/wasm-to-oci)
  echo "Wrapper installed to $SNAP_COMMON/plugin/wasm-to-oci"
  run_with_sudo rm -rf "$SNAP_DATA/tmp/wasm_to_oci"
fi

"$SNAP/microk8s-enable.wrapper" dns

# Add path to containerd environment
CONTAINERD_ENV="${SNAP_DATA}/args/containerd-env"
if ! grep -q "SPIN_PATH" "${CONTAINERD_ENV}"; then
  echo "Add Spin Path (${SHIM_PATH})to containerd environment"
  run_with_sudo echo -ne "# spin start\nSPIN_PATH=\"${SNAP_DATA}/bin\"\nPATH=\$PATH:\$SPIN_PATH\n# spin end\n" >> "${CONTAINERD_ENV}"
else
  echo "Spin path already in containerd environment"
fi

# Add spin runtime to containerd-template.toml 

CONTAINERD_TEMPLATE="${SNAP_DATA}/args/containerd-template.toml"
if ! grep -q "spin" "${CONTAINERD_TEMPLATE}"; then
  echo "Adding plugins."io.containerd.grpc.v1.cri".containerd.runtimes.spin to containerd configuration"
  run_with_sudo sed -i "/plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.*/i\\# spin start\\n\\        [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.spin]\\n\\          runtime_type = \"io.containerd.spin.v1\"\\n\\n\\          [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.spin.options]\\n\\            BinaryName = \"${SHIM_BINARY}\"\\n# spin end\\n" "${CONTAINERD_TEMPLATE}"

  run_with_sudo preserve_env snapctl restart "${SNAP_NAME}.daemon-containerd"
else
  echo "Spin already exists in ${CONTAINERD_TEMPLATE}"
fi
run_with_sudo touch "${SNAP_DATA}/var/lock/spin.enabled"

$KUBECTL apply -f "${CURRENT_DIR}/runtime.yaml"


echo "Spin support is available"
echo ""
echo ""
echo "To use the kata runtime set the 'spin' runtimeClassName, eg:"
echo ""
echo "apiVersion: apps/v1"
echo "kind: Deployment"
echo "metadata:"
echo "  name: wasm-spin"
echo "spec:"
echo "  replicas: 3"
echo "  selector:"
echo "    matchLabels:"
echo "      app: wasm-spin"
echo "  template:"
echo "    metadata:"
echo "      labels:"
echo "        app: wasm-spin"
echo "    spec:"
echo "      runtimeClassName: wasmtime-spin"
echo "      containers:"
echo "        - name: testwasm"
echo "          image: ghcr.io/deislabs/containerd-wasm-shims/examples/spin-rust-hello:latest"
echo "          command: [\"/\"]"
echo ""
